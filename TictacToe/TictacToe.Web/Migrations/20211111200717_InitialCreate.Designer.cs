// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TictacToe.Web.Models;

namespace TictacToe.Web.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20211111200717_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TictacToe.Web.Models.Board", b =>
                {
                    b.Property<int>("BoardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("BoardId");

                    b.ToTable("Boards");

                    b.HasData(
                        new
                        {
                            BoardId = 1
                        });
                });

            modelBuilder.Entity("TictacToe.Web.Models.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoardId")
                        .HasColumnType("int");

                    b.Property<string>("Sign")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Xcoordinate")
                        .HasColumnType("int");

                    b.Property<int>("Ycoordinate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Fields");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoardId = 1,
                            Sign = " ",
                            Xcoordinate = 0,
                            Ycoordinate = 0
                        },
                        new
                        {
                            Id = 2,
                            BoardId = 1,
                            Sign = " ",
                            Xcoordinate = 0,
                            Ycoordinate = 1
                        },
                        new
                        {
                            Id = 3,
                            BoardId = 1,
                            Sign = " ",
                            Xcoordinate = 0,
                            Ycoordinate = 2
                        },
                        new
                        {
                            Id = 4,
                            BoardId = 1,
                            Sign = " ",
                            Xcoordinate = 1,
                            Ycoordinate = 0
                        },
                        new
                        {
                            Id = 5,
                            BoardId = 1,
                            Sign = " ",
                            Xcoordinate = 1,
                            Ycoordinate = 1
                        },
                        new
                        {
                            Id = 6,
                            BoardId = 1,
                            Sign = " ",
                            Xcoordinate = 1,
                            Ycoordinate = 2
                        },
                        new
                        {
                            Id = 7,
                            BoardId = 1,
                            Sign = " ",
                            Xcoordinate = 2,
                            Ycoordinate = 0
                        },
                        new
                        {
                            Id = 8,
                            BoardId = 1,
                            Sign = " ",
                            Xcoordinate = 2,
                            Ycoordinate = 1
                        },
                        new
                        {
                            Id = 9,
                            BoardId = 1,
                            Sign = " ",
                            Xcoordinate = 2,
                            Ycoordinate = 2
                        });
                });

            modelBuilder.Entity("TictacToe.Web.Models.Field", b =>
                {
                    b.HasOne("TictacToe.Web.Models.Board", "Board")
                        .WithMany("Fields")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");
                });

            modelBuilder.Entity("TictacToe.Web.Models.Board", b =>
                {
                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
